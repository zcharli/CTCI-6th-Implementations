package random;

import com.sun.tools.corba.se.idl.InterfaceGen;

import java.io.Serializable;
import java.util.Arrays;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.LongSummaryStatistics;
import java.util.Map;
import java.util.Objects;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;

/**
 * @author cli
 * @since 2/10/18
 */
public class Test
{

	final static String TEST_STR = "111441|0.04142816967327933|10023|102,526469|0.04109120955057871|10022|73,89600|0.040155493112947534|10023|120,114150|0.03952582305292629|10023|91,94367|0.03945101226185478|10023|94,234752|0.038459590578390046|10023|109,111418|0.03834440823139485|10023|117,114134|0.035473727461804674|10023|101,94326|0.035251644508583674|10023|82,217550|0.03348350476285767|10023|80,287606|0.03211469719961274|10023|69,94399|0.031953300618049706|10023|71,321151|0.03105332104571856|10023|83,111444|0.029767099237548975|10023|73,322997|0.028346336614668895|10022|165,89620|0.027398616079772637|10023|80,114149|0.02730848219845625|10023|68,1011893|0.026966213146102407|10022|51,94330|0.026474491367541268|10023|91,89617|0.02575644474813043|10023|73,499916|0.025276634344102898|10023|58,111416|0.024259684990718032|10023|65,111421|0.024249614366130993|10023|59,620703|0.024130692570666454|10023|65,225873|0.024015572446544974|10023|53,313573|0.02360957767558507|10023|60,111428|0.022705835126146136|10023|56,595373|0.021325942788448453|10023|51,321626|0.021148377573647636|10022|88,321606|0.021108391493139596|10022|43,94344|0.021030829864114236|10023|47,876959|0.02026318201241024|10022|152,217546|0.019703893036467992|10023|42,1513541|0.019595045815544873|10023|41,8316858|0.01941848977999679|10023|47,89568|0.01927585572824561|10023|45,1486034|0.018900299869503746|10023|44,104909|0.018782794192666947|10021|117,103111|0.018010621984321438|10021|145,89602|0.017892942492255298|10023|53,89615|0.017734058080476667|10023|38,535627|0.017383459276436097|10022|99,320038|0.017361993851431622|10023|40,104824|0.017281148187854256|10021|228,104871|0.017262891795337108|10021|158,258705|0.01722883363842513|10023|57,108744|0.017183970162257443|10021|39,111417|0.016731911130782866|10023|39,323108|0.01647993975602676|10022|38,111434|0.016461614864870886|10023|38,89619|0.015806565990098723|10023|32,94368|0.01578055773714643|10023|40,89575|0.01574019316002029|10023|44,104822|0.015660803030496818|10021|99,94350|0.015287975698179848|10023|38,94371|0.015221708965771585|10023|45,603272|0.014990679708577297|10021|124,94337|0.014738350027654456|10023|34,103113|0.014735869194783369|10021|259,1438444|0.014730729787454657|10022|119,647006|0.014710065407801629|10023|36,951287|0.014586415807497085|10021|47,104795|0.014392455761929119|10021|194,142761|0.01421662963338313|10021|65,111422|0.014054883101668695|10023|34,133763|0.013958428691548355|10021|92,104793|0.013925390354423212|10021|75,321605|0.013806630510583657|10022|51,104604|0.013664769452661301|10021|359,103645|0.013650534085564891|10021|212,142762|0.01361848477015028|10021|184,549445|0.013457800346070163|10023|32,678412|0.013429305448926126|10023|30,3225572|0.013404240780834168|10023|36,105250|0.013115899676094249|10021|208,94372|0.012717287225534083|10023|32,6825959|0.012674670132757377|10021|65,322988|0.012533333506461169|10022|68,1201116|0.012298895081947793|10023|29,1159285|0.01213326470712587|10023|24,111423|0.011982994053654716|10023|28,103648|0.011599808241509614|10021|225,2141088|0.011560760650915741|10022|32,104798|0.011271727134389632|10021|74,559078|0.011042124421930944|10021|117,105255|0.010862307938436037|10021|137,104828|0.010855283994911225|10021|106,654771|0.010648805334851871|10021|43,6485213|0.010518319770739684|10023|27,121009|0.01045825697547765|10023|26,555224|0.010337609748270693|10023|21,523570|0.010260657285790252|10022|23,558272|0.010097266109196895|10021|29,321949|0.01002547705899752|10022|42,322981|0.010007550377802883|10022|71,797942|0.009828537746240215|10022|27,321577|0.009562353264011956|10022|21,321966|0.009269013638593192|10022|31,481776|0.009175536950743739|10021|85,105254|0.009080663928615207|10021|56,8400863|0.008967072885772018|10021|80,831598|0.008928321552516454|10022|33,321906|0.008911253150328034|10022|55,144272|0.008658883618275893|10021|62,105257|0.008488139503413471|10021|133,103649|0.00841674625494726|10021|90,322103|0.008265665881641725|10022|17,104912|0.008221375389299481|10021|78,523539|0.008169803748668858|10022|32,222957|0.008155526238549378|10023|19,268207|0.007910402352441087|10023|19,108743|0.007822500605837814|10021|24,108742|0.007814059779523803|10021|25,106782|0.007807647159315707|10021|29,103112|0.00778038592248088|10021|70,102687|0.007755373694786878|10021|95,2342107|0.007729195925803148|10022|21,108823|0.00770074394117014|10021|57,2046623|0.007677992780012339|10022|21,558270|0.007526868039531764|10021|22,8142646|0.007504815291873174|10023|17,259028|0.007435876525190996|10023|18,104794|0.007410036517456986|10021|53,3172680|0.007378878049184346|10022|21,105249|0.007363769424463804|10021|27,914047|0.007318754985917963|10022|32,104816|0.007264683331318812|10021|71,321911|0.007078184970262568|10022|21,603296|0.007024304167835013|10021|61,558282|0.006990986812668575|10021|17,120988|0.006939431578912145|10023|16,108920|0.006922034040199778|10021|21,5572598|0.00680023045291879|10022|23,2042435|0.006689470150734545|10021|22,322070|0.006624631966861388|10022|17,2138841|0.006613976597091013|10022|21,1992229|0.00655902431139077|10022|16,103646|0.006529380048390265|10021|31,103114|0.006485757411513687|10021|25,1159158|0.006478020312192872|10021|17,321657|0.00644074006751787|10022|16,133639|0.0064215305401030326|10021|48,4325990|0.006397219295199937|10023|16,144269|0.006375231885007959|10021|43,323225|0.006320938084138885|10022|19,8145466|0.006298996465983835|10023|12,1131010|0.006271199312627531|10022|27,606218|0.006244577583257144|10022|13,4838745|0.006227491607061612|10022|21,323045|0.006200682637049608|10022|16,258731|0.0061953714408794665|10023|13,1937941|0.006191500567315767|10022|34,1026370|0.006144464307209356|10023|12,480031|0.006129733012924062|10022|21,89585|0.006118411878524921|10023|15,526337|0.006099933033501495|10022|12,503318|0.006038325542944723|10022|16,321640|0.006036375183914575|10022|14,321980|0.005980008682184638|10022|18,89592|0.005966615430382841|10023|12,268205|0.005951828476333756|10023|14,321579|0.005934487868972663|10022|21,2481217|0.005903487557551265|10022|11,1141527|0.0058513052325916935|10022|23,8529350|0.005824174790077475|10022|23,108740|0.005781387323237914|10021|38,106786|0.005734926608999479|10021|23,6641547|0.00571171586152015|10022|20,1229313|0.005688848484860151|10022|17,857364|0.00567982476234454|10022|12,480040|0.005677065009357426|10022|15,481783|0.00564620508194711|10021|35,323002|0.005619422456568857|10022|19,546507|0.005615643793343276|10021|12,2569002|0.005585541790885264|10021|27,1020869|0.005548347132402228|10022|11,1023621|0.005539495856911968|10022|12,3135489|0.005467051013046252|10022|13,8112658|0.005447027761283211|10023|11,107845|0.005445430907341176|10021|22,323006|0.005439484152681698|10022|12,322057|0.005433722953762171|10022|14,2249536|0.005430721123462826|10022|11,2249802|0.005413061092459257|10022|15,142572|0.005388398851832935|10021|24,133818|0.005351603562291488|10021|25,2218268|0.005341176969734008|10021|11,89644|0.005329904190364384|10023|13,321583|0.005315341065615845|10022|19,321697|0.005279931723838311|10022|9,12223452|0.00526629992091272|10023|10,322019|0.005260547588436276|10022|16,1980452|0.0052436461617130945|10022|21,526410|0.005159669490179799|10022|14,322076|0.005156539301917424|10022|11,120977|0.0051543374761638715|10023|13,107180|0.005150678442493256|10021|33,321934|0.005124768043501124|10022|14,546065|0.0050765183556195905|10022|13,1200516|0.00499142490571394|10021|17,321913|0.004977932200143597|10022|10,1138709|0.004876647671248453|10023|10,1072680|0.004828459252360252|10021|15,2339922|0.004795577128825896|10022|10,553724|0.004777525912678313|10021|13,663043|0.004776589351132118|10021|16,1534460|0.004774771260131265|10021|13,2186336|0.004770822030230053|10021|17,220216|0.004760711766806334|10023|9,208217|0.004754997062874528|10021|11,322212|0.00473414507302548|10022|12,558305|0.004699420623687291|10021|23,321932|0.004688522139571587|10022|13,208218|0.00465748576408512|10021|37,3259326|0.004648407699454417|10021|11,321956|0.004600171091924985|10022|9,1954989|0.004594118406781919|10022|21,1145361|0.004582185077562499|10021|20,268206|0.00456718397090617|10023|10,3645294|0.004555206983978037|10022|10,253110|0.004511652302586499|10023|9,4801857|0.004508194302167189|10021|10,322312|0.004475770321216266|10022|13,482383|0.004465184829103276|10022|11,4232689|0.004458803888976678|10023|10,3222705|0.004395124904510799|10021|11,321924|0.0043943355907136925|10022|13,222955|0.004373159010947534|10023|9,3875212|0.004364438483273177|10022|10,4550498|0.004330628158070362|10021|11,1027443|0.004322877078708664|10022|12,8145467|0.004320508663328928|10023|8,290589|0.004304912098659042|10021|11,104823|0.004303134358590459|10021|12,627783|0.004240924506616698|10021|13,280420|0.004230946093491815|10023|8,481782|0.004195441327312452|10021|14,89639|0.004175174109416532|10023|9,321953|0.004175084293449753|10022|12,77629|0.004171258372940227|10023|9,322321|0.004155943371681145|10022|17,548308|0.004155816304549533|10021|15,323010|0.004138328197707802|10022|13,321941|0.004075444326142215|10022|13,481778|0.004052086963195863|10021|10,9453693|0.004033662355169751|10022|9,2388284|0.004029787950944916|10022|12,8711593|0.0040262620071059635|10022|10,322995|0.003967965189229496|10022|9,482395|0.003967593587595821|10022|10,384628|0.003944685709330669|10022|8,279055|0.003943479418077001|10021|17,1115352|0.00390402628891221|10022|11,8505238|0.003899157902482839|10021|15,322007|0.0038769975262717294|10022|10,321931|0.0038400467863983433|10022|11,322986|0.0038293528562736343|10022|14,322999|0.0038266218954110063|10022|8,524819|0.003820607991275394|10022|9,8804485|0.003815387074873302|10021|7,108135|0.0037887116973010755|10021|24,103642|0.0037854843915585156|10021|17,322311|0.0037827556370141676|10022|13,914043|0.0037797909218219945|10022|7,321647|0.0037467937673621673|10022|6,321927|0.00372667145594259|10022|8,4724568|0.00371566023013931|10021|8,11887937|0.0037120122035252602|10022|8,104851|0.0037091151285953317|10021|14,142576|0.003684721085072645|10021|10,2365310|0.0036795902793864805|10021|16,480029|0.003641812591697549|10022|10,2017716|0.003619351875287817|10021|11,108749|0.0036065802029168013|10021|10,107580|0.003605153694475195|10021|21,209258|0.003586258807372793|10021|13,321943|0.0035654083144966765|10022|12,323014|0.0035598078322150667|10022|11,4085930|0.0035483731650315744|10021|17,77606|0.003496361921198276|10023|7,605186|0.0034475008471967585|10021|10,323133|0.0034338992235450755|10022|7,107576|0.0034299510609612613|10021|26,322039|0.00342762247328821|10022|8,321652|0.0034155137794367693|10022|6,208446|0.0033827877473739027|10023|7,321663|0.0033767883858709766|10022|8,3196478|0.0033378224734580005|10022|7,508945|0.0033312403210543034|10022|6,2248468|0.0033251509367810722|10021|6,94363|0.003305368507397558|10023|7,89596|0.00330182588818022|10023|7,3318086|0.003294495565385709|10021|11,209259|0.0032835669155154897|10021|8,492333|0.0032718432188524023|10022|10,6774843|0.003256860176206342|10022|7,1185335|0.0032556646483864137|10022|8,4070240|0.0032105483471553202|10022|7,2330643|0.00319928336939608|10022|8,322032|0.0031755670944614354|10022|7,3586744|0.0031528412720078394|10023|6,1017794|0.003151288156146914|10022|9,322111|0.003147799656228764|10022|7,109750|0.0031430720478729285|10021|8,789610|0.0030828862197855157|10022|7,8534897|0.0030800292521964566|10022|7,7597615|0.0030547317279943907|10021|8,321565|0.0030493148369016457|10022|6,321978|0.0030420112404787574|10022|8,321935|0.0029806403891543386|10022|6,2096730|0.00297431379636282|10022|8,526270|0.002969104821081378|10022|6,2587892|0.002956483007110958|10021|8,126058|0.002948764596782628|10023|7,605873|0.0029027379904921426|10022|9,7692153|0.0028988639347684694|10021|8,1898241|0.002885210591812751|10021|7,108751|0.0028594267117158277|10021|7,4236312|0.002856470450992396|10021|8,118441|0.002829739707948886|10023|7,3297051|0.0028296028855480135|10022|8,1403138|0.00282897301367276|10023|6,321989|0.0028010310490715435|10022|5,823839|0.0027946879726688514|10022|8,89643|0.0027791642449835033|10023|7,3357661|0.0027778693500926568|10022|5,109587|0.0027734030807512714|10021|9,133863|0.0027618997297733884|10021|19,4452240|0.0027394394354548065|10022|5,108741|0.0027370590799278677|10021|7,778649|0.002722707544095344|10021|7,2253660|0.0027032467488039614|10021|9,1907605|0.00270003604094117|10022|11,105507|0.002682740266760451|10021|7,103632|0.0026808455102365174|10021|13,105258|0.00266896883625027|10021|10,319418|0.002659783540898284|10021|6,322063|0.0026553460288615046|10022|5,2099685|0.002650746698495938|10022|5,546521|0.0026475944248049083|10021|8,102690|0.0026194834510453713|10021|5,1228651|0.002618072737290447|10022|7,107581|0.0026092355826863867|10021|15,2455327|0.0026014073018950363|10022|8,577132|0.002593467560710698|10022|6,1402264|0.002590753379979003|10021|7,322009|0.0025764353740214073|10022|6,1495466|0.0025746950013719686|10022|7,7918114|0.0025519235165635287|10022|7,104571|0.0025366218407550595|10021|17,321915|0.002531793232672691|10022|6,779322|0.0025158965576495803|10022|6,1501443|0.0025153987453349455|10021|5,1832507|0.002510163160067923|10021|8,102693|0.0024962156370772126|10021|12,8071022|0.002482759995459278|10022|6,94052|0.0024794867648920455|10023|5,6673558|0.002452931475607016|10022|4,103107|0.0024469181519574993|10021|9,8385145|0.0024355702079208023|10022|5,553784|0.002435208841685437|10021|4,323184|0.002428088893864405|10022|6,105506|0.0024269385843045813|10021|8,385710|0.0024182457397818892|10022|4,2322977|0.0024182457397818892|10022|4,104832|0.0024171664703361603|10021|7,2141845|0.0023999802898596032|10022|6,482387|0.002397463260445665|10022|5,6530878|0.0023791928283046822|10022|5,558286|0.002376195308652309|10021|5,321619|0.002332751784480198|10022|5,104570|0.002327858788131057|10021|6,322996|0.0023225392782587344|10022|4,4826923|0.0023160207337567145|10022|4,321960|0.002310663606649353|10022|5,4926148|0.00230795178483864|10022|5,480300|0.002302687884640934|10022|6,612114|0.00230255990966262|10021|5,94234|0.0022788033006710673|10023|5,321982|0.0022696228602040796|10022|6,2422679|0.002263330035613977|10021|7,323049|0.002261471720613174|10022|4,103633|0.0022434966433697258|10021|10,4134543|0.002233911947666284|10022|4,587958|0.0022285794751330155|10022|7,222958|0.0022214044676149634|10023|6,509436|0.0022210184772708053|10022|7,8525619|0.002209677958932235|10021|5,6033876|0.00220798325630542|10022|4,10041455|0.0021911719618271036|10022|6,10210757|0.0021911136570445244|10021|5,481780|0.002189046155429997|10021|8,802390|0.0021833840590849466|10022|6,1951452|0.0021818346457074863|10022|6,1605497|0.002166355823385141|10022|5,6413259|0.002163449777554476|10022|6,1206684|0.0021625197702901627|10021|7,1115349|0.002151037482712648|10022|5,105242|0.002144928975121347|10021|7,8775984|0.002121351417562441|10021|5,2057105|0.0021049236290252888|10022|5,1774285|0.002100874648085193|10022|5,321991|0.0021008376694553153|10022|4,322991|0.002096870423957389|10022|4,1770868|0.002082930636912069|10021|5,538037|0.0020813267736748764|10022|4,214893|0.0020809641380522396|10021|5,123196|0.0020775192529744082|10023|4,323363|0.0020750965755455667|10022|5,558280|0.0020737419663806457|10021|4,1098339|0.002071211178079618|10021|5,8028510|0.002071211178079618|10022|5,321976|0.002059678726271784|10022|5,103109|0.00205587506860233|10021|5,321908|0.0020552909054284596|10022|4,3169894|0.002052466037044111|10023|6,7809086|0.0020520912910458283|10021|5,286204|0.002048104538917458|10021|4,217000|0.002044551098280104|10023|4,2079076|0.002041023575206574|10023|4,94229|0.0020375215498480807|10023|4,2205614|0.0020340446128707607|10021|4,107585|0.0020329248963974005|10021|9,89645|0.0020305923667406195|10023|4,321987|0.0020209654394252327|10022|6,321744|0.0020207025175179873|10022|5,323161|0.0020099404399327473|10022|5,323009|0.0019909583587570164|10022|4,558268|0.00198779481064749|10021|4,260102|0.0019846915266306946|10021|7,560044|0.0019804598527175883|10021|8,94230|0.0019784230672531817|10023|4,8404489|0.0019664920816907954|10022|3,10239999|0.001966194745637137|10021|4,144271|0.001963183691067607|10021|4,7613446|0.0019575702612648674|10021|7,133849|0.0019403749893638982|10021|5,2494322|0.001917438806937471|10022|3,7119379|0.0018979424119487944|10021|5,1478487|0.0018959021939675828|10022|3,3567563|0.001884329956471656|10022|5,558264|0.001884329956471656|10021|5,619382|0.001882815315515392|10022|4,8804059|0.001865155880311906|10021|4,5833722|0.001865155880311906|10021|4,1467037|0.0018607408089103626|10023|5,133861|0.0018432905015739812|10021|4,1456967|0.0018428496781069034|10021|9,7182877|0.0018361987370967229|10023|4,3335480|0.0018295057253583814|10022|5,8790902|0.0018200106018115044|10021|4,10454994|0.0018155799020888287|10022|3,3227064|0.0018146724840283992|10021|6,553746|0.0018132205862426297|10021|4,133714|0.001808741348617999|10021|4,1207711|0.0018082592641790888|10021|7,1673538|0.0018042992607662446|10022|4,102692|0.001793352232905416|10021|4,1072001|0.001791189310204791|10022|4,323097|0.001782426825128279|10022|5,606240|0.0017783907924791805|10021|4,526045|0.0017721033795282596|10022|4,216262|0.0017707997509534452|10021|5,322987|0.00177002368076659|10022|4,8447793|0.0017658063625640246|10023|3,321632|0.0017658063625640246|10022|3,506430|0.001765691614407441|10023|5,77638|0.001757710030377235|10023|4,321588|0.001757710030377235|10022|4,498033|0.0017468265489848662|10022|3,181885|0.001743142322411996|10021|5,8634101|0.0017407610351231771|10021|3,3680287|0.0017406074904488989|10021|7,133735|0.0017321270440472502|10021|5,103634|0.0017287263188552253|10021|7,777353|0.0017242587733865978|10023|4,105598|0.0017223532120672568|10021|4,1081582|0.001717659306976166|10022|3,224640|0.001712150520333568|10023|3,113623|0.0017091958460388093|10023|4,4135675|0.0017067400035321748|10022|3,2085983|0.0017018159216977433|10022|4,292269|0.0016981625903912316|10021|4,2012695|0.0016981625903912316|10021|4,866405|0.001696344932648741|10021|4,1954188|0.0016945997938997977|10021|6,479411|0.0016810369016570402|10022|3,4590760|0.001676143954028738|10021|3,481777|0.0016727164474742444|10021|5,6959630|0.0016715042194757582|10021|4,534350|0.0016493904248115114|10021|4,3460955|0.0016438851967115772|10021|3,3519201|0.0016411129497501602|10021|4,3584374|0.001610635944599553|10021|3,1193030|0.0016028331481130929|10021|3,2161415|0.0016011511609367445|10021|7,77574|0.0015984105068818878|10023|4,8376621|0.0015953726910743556|10021|4,104568|0.0015949102588728966|10021|6,2318718|0.001576901711564753|10021|3,8803051|0.0015733581615352482|10021|3,4154133|0.0015629483826586224|10021|3,217548|0.0015182139029691559|10023|3,2205796|0.0015152320084643026|10021|3,219438|0.0015152320084643026|10023|3,1067245|0.0015045628106515232|10021|5,1949742|0.0015020292600089907|10021|4,1577043|0.0014978602380257594|10023|3,7592910|0.0014978602380257594|10021|3,268753|0.0014905855837092417|10021|4,1382516|0.0014893282047123064|10021|4,10755993|0.0014786276892806757|10021|3,219441|0.0014629367325888335|10023|3,217148|0.0014435041024875755|10023|4,77601|0.0013849617863177382|10023|3,1550301|0.0013590077749647774|10023|3,89626|0.001351367633286209|10023|3,214890|0.0013476043346582081|10023|3,126071|0.0013329111506075754|10023|3,612519|0.0013311134699367378|10023|3,217547|0.001318759275558093|10023|3,124191|0.0012533426608336209|10023|3,12882338|0.0012456283487592354|10023|2,115990|0.0012055752118808013|10023|4,94029|0.0011868243902801786|10023|2,1164609|0.0011689138876974199|10023|2,1049804|0.0011375675527347975|10023|2,557053|0.0011024896834811733|10023|2,217540|0.0010946298388189797|10023|2,554812|0.0010833991971554765|10023|2,288399|0.0010323307234804536|10023|3,114148|0.0010107567107710263|10023|2,254295|0.0010050956909776804|10023|3,77800|9.98356184033518E-4|10023|2,89807|9.86633498104146E-4|10023|2,249906|9.798928555652662E-4|10023|2,611346|9.608324862260458E-4|10023|2,7306788|9.58812694463547E-4|10023|2,621896|9.377207123255211E-4|10023|2,3952875|9.358975897605102E-4|10023|2,121005|9.218148176161741E-4|10023|2,530602|9.10162763624235E-4|10023|2,89789|9.08545021108666E-4|10023|2,217541|9.053428885026839E-4|10023|2,94238|8.797564790310335E-4|10023|2,1577042|8.727283711979409E-4|10023|2,1206836|8.332028293160711E-4|10023|2,254771|8.161482757232541E-4|10023|2,271943|8.139604113591597E-4|10023|2,247022|8.085733039357499E-4|10023|2,77875|8.032998785923317E-4|10023|2,1136705|7.295605485119152E-4|10023|2,13403186|6.113894488523588E-4|10023|1,634886|6.046799431512956E-4|10023|1,120986|5.68494020616189E-4|10023|1,10118647|5.643754353315474E-4|10023|1,651133|5.604425864310018E-4|10023|1,94128|5.566787234670133E-4|10023|1,10165874|5.566787234670133E-4|10023|1,280378|5.462641563051906E-4|10023|1,121019|5.430473224230444E-4|10023|1,125079|5.340361318131021E-4|10023|1,89770|5.312218137213967E-4|10023|1,610423|5.284920838577484E-4|10023|1,77502|5.23265981153719E-4|10023|1,123187|5.207605363096408E-4|10023|1,89634|5.113672480395804E-4|10023|1,9878099|5.091599586206122E-4|10023|1,1423262|5.070034943090088E-4|10023|1,271651|5.048954184588248E-4|10023|1,120985|5.028334675254033E-4|10023|1,89698|5.028334675254033E-4|10023|1,1206130|5.028334675254033E-4|10023|1,94139|5.028334675254033E-4|10023|1,235270|4.988396571801117E-4|10023|1,244100|4.988396571801117E-4|10023|1,115983|4.988396571801117E-4|10023|1,222956|4.931466003975939E-4|10023|1,9864584|4.931466003975939E-4|10023|1,77660|4.895308688677779E-4|10023|1,272384|4.895308688677779E-4|10023|1,7295026|4.877726422334307E-4|10023|1,1383274|4.86045814023181E-4|10023|1,89780|4.86045814023181E-4|10023|1,11917995|4.86045814023181E-4|10023|1,113622|4.843491999970593E-4|10023|1,89740|4.826816873746275E-4|10023|1,1155236|4.810422231333407E-4|10023|1,254294|4.810422231333407E-4|10023|1,77636|4.7628242155231976E-4|10023|1,254772|4.7474570363244603E-4|10023|1,77497|4.7323254632354546E-4|10023|1,253362|4.7174218604555964E-4|10023|1,1139014|4.674007802091127E-4|10023|1,1516585|4.674007802091127E-4|10023|1,223418|4.674007802091127E-4|10023|1,77622|4.618909697211569E-4|10023|1,94129|4.579479544891438E-4|10023|1,1027461|4.516987185942563E-4|10023|1,219434|4.4812469743380303E-4|10023|1";
	
	public static void main(String[] args)
	{
		Map<String, String> keyValues = new HashMap<>();
		keyValues.put("89599", TEST_STR);
		
		LongSummaryStatistics stats = new LongSummaryStatistics();
		// Regex approach
		final Pattern RECOMMENDATION_VALUE = Pattern.compile("(?<locationid>\\d+)\\|(?<score>\\d+\\.\\d+)\\|(?<placetype>\\d+)\\|(?<cosaves>\\d+)");
		for (int i = 0; i < 100000; i++)
		{
			long start = System.currentTimeMillis();
			final Map<Integer, List<Recommendation>> recommendations = keyValues.entrySet()
				.stream()
				.map(e -> new Pair<>(Integer.valueOf(e.getKey()), Arrays.asList(e.getValue().split(",")).stream()
					.map(RECOMMENDATION_VALUE::matcher)
					.filter(Matcher::matches)
					.map(m ->  Recommendation.builder().locationId(Integer.parseInt(m.group("locationid")))
						.placetype(Integer.parseInt(m.group("placetype")))
						.cosaves(Integer.parseInt(m.group("cosaves")))
						.score(Double.parseDouble(m.group("score")))
						.isQuality(Integer.parseInt(m.group("cosaves")) > 3)
						.build())
					.collect(Collectors.toList())))
				.collect(Collectors.toMap(Pair::getFirst, Pair::getSecond));
			final long took = System.currentTimeMillis() - start;
			System.out.println(took);
			stats.accept(took);
		}
		
		System.out.println(stats);

//		// Split approach
//		start = System.currentTimeMillis();
//		for (int i = 0 ; i < 100000; i++)
//		{
//			String[] array = s.split(",");
//			int loc = Integer.parseInt(array[0]);
//			int place = Integer.parseInt(array[2]);
//			int saves = Integer.parseInt(array[3]);
//			double score = Double.parseDouble(array[1]);
//			boolean isQuality = saves > 3;
//		}
//		System.out.println(System.currentTimeMillis() - start);
	}
	
	public static class Recommendation implements Serializable
	{
		private static final long serialVersionUID = 1L;
		
		protected Integer locationId = null;
		
		
		protected Integer placetype = null;
		
		
		protected Integer cosaves = null;
		
		
		protected Double score = null;
		
		
		protected Boolean isQuality = false;
		
		
		/**
		 * Get locationId
		 * @return locationId
		 **/
		public Integer getLocationId() {
			return locationId;
		}
		
		/**
		 * Get placetype
		 * @return placetype
		 **/
		public Integer getPlacetype() {
			return placetype;
		}
		
		/**
		 * Get cosaves
		 * @return cosaves
		 **/
		public Integer getCosaves() {
			return cosaves;
		}
		
		/**
		 * Get score
		 * @return score
		 **/
		public Double getScore() {
			return score;
		}
		
		/**
		 * Get isQuality
		 * @return isQuality
		 **/
		public Boolean getIsQuality() {
			return isQuality;
		}
		
		
		@Override
		public boolean equals(java.lang.Object o) {
			if (this == o) {
				return true;
			}
			if (o == null || getClass() != o.getClass()) {
				return false;
			}
			Recommendation recommendation = (Recommendation) o;
			return Objects.equals(this.locationId, recommendation.locationId) &&
				Objects.equals(this.placetype, recommendation.placetype) &&
				Objects.equals(this.cosaves, recommendation.cosaves) &&
				Objects.equals(this.score, recommendation.score) &&
				Objects.equals(this.isQuality, recommendation.isQuality);
		}
		
		@Override
		public int hashCode() {
			return Objects.hash(locationId, placetype, cosaves, score, isQuality);
		}
		
		@Override
		public String toString() {
			StringBuilder sb = new StringBuilder();
			sb.append("class Recommendation {\n");
			
			sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
			sb.append("    placetype: ").append(toIndentedString(placetype)).append("\n");
			sb.append("    cosaves: ").append(toIndentedString(cosaves)).append("\n");
			sb.append("    score: ").append(toIndentedString(score)).append("\n");
			sb.append("    isQuality: ").append(toIndentedString(isQuality)).append("\n");
			sb.append("}");
			return sb.toString();
		}
		
		/**
		 * Convert the given object to string with each line indented by 4 spaces
		 * (except the first line).
		 */
		private String toIndentedString(java.lang.Object o) {
			if (o == null) {
				return "null";
			}
			return o.toString().replace("\n", "\n    ");
		}

		public static Builder builder() {
			return new Builder();
		}
		
		public static Builder builder(Recommendation obj) {
			return new Builder(obj);
		}
		
		public static class Builder {
			private Builder() {}
			
			private Builder(Recommendation obj) {
				if (obj == null) {
					return;
				}
				this.locationId = obj.locationId;
				this.placetype = obj.placetype;
				this.cosaves = obj.cosaves;
				this.score = obj.score;
				this.isQuality = obj.isQuality;
			}
			
			private Integer locationId = null;
			private Integer placetype = null;
			private Integer cosaves = null;
			private Double score = null;
			private Boolean isQuality = false;
			
			
			public Builder locationId(Integer locationId) {
				this.locationId = locationId;
				return this;
			}
			
			
			public Builder placetype(Integer placetype) {
				this.placetype = placetype;
				return this;
			}
			
			
			public Builder cosaves(Integer cosaves) {
				this.cosaves = cosaves;
				return this;
			}
			
			
			public Builder score(Double score) {
				this.score = score;
				return this;
			}
			
			
			public Builder isQuality(Boolean isQuality) {
				this.isQuality = isQuality;
				return this;
			}
			
			
			
			public Recommendation build() {
				Recommendation retval = new Recommendation();
				retval.locationId = locationId;
				retval.placetype = placetype;
				retval.cosaves = cosaves;
				retval.score = score;
				retval.isQuality = isQuality;
				return retval;
			}
		}
	}
	
	public static class Pair<K, V> implements Map.Entry<K, V>, Serializable
	{
		static final long serialVersionUID = 7557207672240665892L;
		public K first = null;
		public V second = null;
		
		public Pair()
		{
		}
		
		public Pair(K f, V s)
		{
			first = f;
			second = s;
		}
		
		public K getKey()
		{
			return first;
		}
		
		public V getValue()
		{
			return second;
		}
		
		public void setKey(final K o)
		{
			first = o;
		}
		
		public V setValue(final V o)
		{
			V was = second;
			second = o;
			return was;
		}
		
		public K getFirst()
		{
			return first;
		}
		
		/**
		 * need this to make javabean transcoder work and still allow to implement
		 * java.util.Map.Entry
		 *
		 * @param o
		 */
		public void setSecond(final V o)
		{
			setValue(o);
		}
		
		/**
		 * need this to make javabean transcoder work and still allow to implement
		 * java.util.Map.Entry
		 */
		public V getSecond()
		{
			return getValue();
		}
		
		@Override
		public boolean equals(Object object)
		{
			if (object instanceof Map.Entry<?, ?>)
			{
				Map.Entry<?, ?> that = (Map.Entry<?, ?>) object;
				return Objects.equals(this.getKey(), that.getKey())
					&& Objects.equals(this.getValue(), that.getValue());
			}
			return false;
		}
		
		@Override
		public int hashCode()
		{
			int result = first != null ? first.hashCode() : 0;
			result = 31 * result + (second != null ? second.hashCode() : 0);
			return result;
		}
		
		@Override
		public String toString()
		{
			return "(" + first + "," + second + ")";
		}
		
		/**
		 * Shorthand for creating one of these.
		 */
		public static <K,V> Pair<K,V> newPair(K first, V second)
		{
			return new Pair<K, V>(first, second);
		}
		
		/** Shorterhand, cf ImmutableList.of */
		
		public static <K,V> Pair<K,V> of(K first, V second)
		{
			return newPair(first, second);
		}
		
		/**
		 * @return A comparator that compares Pairs based on their first element.
		 */
		
		public static <S extends Comparable<S>, T> Comparator<Pair<S,T>> compareFirst()
		{
			return new Comparator<Pair<S,T>>()
			{
				@Override
				public int compare(Pair<S,T> p1, Pair<S,T> p2)
				{
					return p1.first.compareTo(p2.first);
				}
			};
		}
		
		/**
		 * @return A comparator that compares Pairs based on their second element.
		 */
		
		public static <S, T extends Comparable> Comparator<Pair<S,T>> compareSecond()
		{
			return new Comparator<Pair<S,T>>()
			{
				@Override
				public int compare(Pair<S,T> p1, Pair<S,T> p2)
				{
					return p1.second.compareTo(p2.second);
				}
			};
		}
	}
	
}
